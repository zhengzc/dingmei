<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:http="http://www.springframework.org/schema/security"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security-3.1.xsd">
	
	<http pattern="/resources/bootstrap3.3.5/**" security="none" />
    <http pattern="/resources/css/**" security="none" />
    <http pattern="/resources/javascripts/**" security="none" />
    <http pattern="/resources/plugin/**" security="none" />
    <http pattern="/resources/img/**" security="none" />

    <http auto-config="true" use-expressions="true" access-denied-page="/index/accessDenied">
        <!-- 不过滤链接 -->
        <!--<intercept-url pattern="/login" filters="none" />-->

        <!--角色配置-->
        <!--<intercept-url pattern="/index/leftTree" access="isAuthenticated()" />-->

        <!--<intercept-url pattern="/common/page" access="hasRole('u1')" />-->
        <!--<intercept-url pattern="/test/page" access="hasAnyRole('u1','u2')" />-->

        <!-- 添加自定义权限验证 -->
        <custom-filter ref="myFilter" before="FILTER_SECURITY_INTERCEPTOR" />

        <form-login login-page="/index/login"
                    authentication-failure-url="/index/login?error=true"
                    default-target-url="/common/page?id=1"
                    />
        <logout logout-url="/j_spring_security_logout"
                invalidate-session="true"
                logout-success-url="/index/login"
                />

        <!--
			配置Spring去监测如果 SessionID 失效，跳转到登陆页面
		 -->
        <session-management invalid-session-url="/index/login">
            <concurrency-control max-sessions="30" error-if-maximum-exceeded="true" />
        </session-management>

    </http>

    <beans:bean id="myFilter" class="com.dingmei.spring.security.FilterSecurityInterceptor">
        <!-- 认证管理器 -->
        <beans:property name="authenticationManager" ref="authenticationManager" />
        <!-- 访问决策器，决定某个用户具有的角色，是否有足够的权限去访问某个资源 -->
        <beans:property name="accessDecisionManager" ref="accessDecisionManager" />
        <!-- 数据资源 -->
        <beans:property name="securityMetadataSource" ref="securityMetadataSource" />

    </beans:bean>

    <beans:bean id="securityMetadataSource" class="com.dingmei.spring.security.InvocationSecurityMetadataSourceService">
    </beans:bean>


    <authentication-manager alias="authenticationManager">
        <authentication-provider ref="authenticationProvider">
        </authentication-provider>
    </authentication-manager>

    <!--     认证管理器 -->
    <beans:bean id="authenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
        <beans:property name="userDetailsService" ref="customerSpringSecurityUserDetailService"></beans:property>
        <!-- 		修改异常策略，不隐藏错误信息 -->
        <beans:property name="hideUserNotFoundExceptions" value="false"></beans:property>
    </beans:bean>

    <beans:bean id="accessDecisionManager" class="com.dingmei.spring.security.AccessDecisionManager">
    </beans:bean>

    <beans:bean id="customerSpringSecurityUserDetailService" class="com.dingmei.spring.security.CustomerSpringSecurityUserDetailService">

    </beans:bean>
</beans:beans>